html{
	/*background: url(assets/backgrounds/bg-13.jpg) no-repeat center center fixed;
	-webkit-background-size: cover;
	/*background-color: #fff;*/
}


html, body{
	margin: 0;
	padding: 0;
	width: 100%;
	height:100%;
}

.background-wrap{
	position: fixed;
	z-index: -1000;
	width: 100%;
	height: 100%;
	overflow: hidden;
	top: 0;
	left: 0;
}

.background-wrap a{
	position: fixed;
	z-index: -1000;
	width: 100%;
	height: 100%;
	overflow: hidden;
	top: 10;
	left: 0;
}

video#video-bg-elem{
	position: absolute;
	top: 0;
	left: 0;
	min-width: 100%;
	min-height: 100%;
}

/*main{
	margin: 0 2.5em 0 2.5em;
	background-color: #222;
	
}*/

img{
	max-width: 100%;
}

h1, h2, h3, h4, h5{
	margin: 0;
}

#header, nav, footer, section, div{
	box-sizing: border-box;
}

ul{
	list-style: none;
	padding: 0;
	margin: 0;
}

#header{	
	padding: 0.5em 25%;
	/*-webkit-box-shadow: 0 1px 5px 0.1px #0f0f0f;*/
	background-color: rgba(255,255,255,0.3);
}

.headerInner{
	width: 100%;
	margin-left: auto;
	margin-right: auto;
	color: #fff;
}


#content1{
	width: 100%;
	margin: 0 37% 0 37%;
	padding: 20px 0px 10px 0px;
}

#title{
	font-family: 'Josefin Sans';
	font-size: 250%;
	
	padding-left: 20px;
}

/*.overlay{
    position:fixed;
    top:0px;
    bottom:0px;
    left:0px;
    right:0px;
    z-index:100;
}*/


/**
 * Styling the container (the wrapper)
 * position is used to make this box a containing block (it becomes a reference for its absolutely positioned children). 
 * overflow will hide part of the images moving outside of the box.
 */

.content{
	padding-bottom: 1.5em;
	/*-webkit-box-shadow: 0 5px 10px 3px #0f0f0f;*/
}
 
#cont{
	width: 100%;
	margin: auto;
}

#closeSlideShow{
	position: absolute;
	top:-550px;
	left: 980px;
	overflow: hidden;
}

#slideshow{
	position: absolute;
	top:-500px;
	left: 220px;
	width: 800px;
	height: 400px;
	overflow: hidden;
	/*border: 8px solid #ccc;*/
	box-shadow: -3px 0px 20px #000;
}

#container, #slideshowContainer{
	width: 100%;
	margin-left:auto;
	margin-right: auto;
	position: relative;
}

#container{
	
	max-width: 1200px;
	padding-top: 1ex;
}

#containerPics{
	width: 65%;
	height: 80%;
	max-width: 100%;
	margin: auto;
}

#slideshowContainer{
	margin-left: -0.5em;
	
	padding-bottom: 1ex;	
	/*border-bottom: 1px double #000000;*/
	clear: both;
}

#show{
	width: 88%;
	height: 100%;
	padding:  40.25% 2% 0 0;
	margin-left:auto;
	margin-right: auto;
	position: relative;
	box-shadow: -3px 0px 10px #000;
	color: #FFFFFF;
	border-right:  #000000;
	background-color: rgba(0, 100, 150,0.2);
	position: relative;
}

.showImage img{
	/*width: 100%;*/
	position: absolute;
	max-width: 100%;
	max-height: 100%;
	left: 0;
	right: 0;
	top:0;
	bottom: 0;
	margin: auto;
}

.arrow img{
	width: 50px;
}

.arrow:focus{
	outline: 0 !important;
}

#show .arrow{
	position: absolute;
	top: 150px;
}

#show .arrow.left  {
	opacity: 0.5;
	margin-left: 11px;
	-webkit-transform: scale(1.5);
	transform: scale(1.5);
	-webkit-transition: .3s ease-in-out;
	transition: .3s ease-in-out;
	-moz-transform: scale(1.5);
	transform: scale(1.5);
	-moz-transition: .3s ease-in-out;
	transition: .3s ease-in-out;
}

#show input.arrow.left:hover {
	opacity: 1;
	margin-left: 5px;
}


#show .arrow.right{
	/*right: 0;
	margin-right:0;*/
	opacity: 0.5;
	right: 10px;
	-webkit-transform: scale(1.5);
	transform: scale(1.5);
	-webkit-transition: .3s ease-in-out;
	transition: .3s ease-in-out;
}

#show input.arrow.right:hover{
	opacity: 1;
	right: 6px;
}

.left:hover{
	/*background-image: url('assets/images/nav/hoverleft.jpg');
	/*background-color:  #fff;
	opacity: 0.5;*/
}

.right:hover{
	/*background-image: url('assets/images/nav/hoverright.jpg');*/
	/*margin-right: 4px;*/
}

.image{
	/*width: 200px;
	height: 200px;*/
	display: inline;
}

.image img{
	/*height: 100%;*/
	vertical-align: top;
}

ul#imageSet{
	white-space: nowrap;
	width: 100%;
	height:100%;
	padding-left: 5px;
	overflow-x: scroll;
	overflow-y: hidden;
}

.li{
	display: inline;
}

li img{
	width:130px;
	height: 80px;
	max-width: 100%;
	max-height: 100%;
}

#set{
	width: 100%;
	margin-top: 2%;
}

.image{
	/*width: 200px;
	height: 200px;*/
	display: inline;
}

.image img{
	/*height: 100%;*/
	vertical-align: top;
}


.li{
	display: inline;
}



/**
 * Styling the images
 *
 * position:absolute is to put all images in a stack. Dimensions are set to increase the size of these images so their edges do not appear in the parent box when we move them inside the said box.
 * Because the images are now larger than their parent container, we use top, left and margin values to align them in the center of the box.
 * Finally, we set the transition (property and duration). Note that duration values are different for opacity and transform as we want the "fade-in" effect to be faster than the "panning" effect.
 */
 
 #slideshow img{
	position: absolute;
	width: 800px;
	height: 400px;
	top: 50%;
	left: 50%;
	margin-left: -400px;
	margin-top: -200px;
	opacity: 0;
	-webkit-transition-property: opacity, -webkit-transform;
    -webkit-transition-duration: 3s, 10s;
       -moz-transition-property: opacity, -moz-transform;
       -moz-transition-duration: 3s, 10s;
        -ms-transition-property: opacity, -ms-transform;
        -ms-transition-duration: 3s, 10s;
         -o-transition-property: opacity, -o-transform;
         -o-transition-duration: 3s, 10s;
            transition-property: opacity, transform;
            transition-duration: 3s, 10s;
 }
 
 /**
 * We change the point of origin using four corners so images 
 * do not move in the same direction. 
 * This technique allows us to create various paths while applying 
 * the same translate() values to all images (see the 'fx' class further 
 * below).
 */
 
 #slideshow img{
	-webkit-transform-origin: bottom left;
	-moz-transform-origin: bottom left;
	-ms-transform-origin: bottom right;
	-o-transform-origin: bottom left;
	transform-origin: bottom left;
 }
 
 #slideshow :nth-child(2n+1){
	-webkit-transform-origin: top right;
	-moz-transform-origin: top right;
	-ms-transform-origin: bottom right;
	-o-transform-origin: top right;
	transform-origin: top right;
 }
 
 #slideshow :nth-child(3n+1){
	-webkit-transform-origin: top left;
	-moz-transform-origin: top left;
	-ms-transform-origin: bottom right;
	-o-transform-origin: top left;
	transform-origin: top left;
 }
 
 #slideshow :nth-child(4n+1){
	-webkit-transform-origin: bottom right;
	-moz-transform-origin: bottom right;
	-ms-transform-origin: bottom right;
	-o-transform-origin: bottom right;
	transform-origin: bottom right;
 }
 
 /**
 * Because of the stacking context, we need to make sure that 
 * the first image (in source) is not hidden by the last one. 
 * The rule below moves all images past the second one down the stack. 
 * This is because the second image needs to show on top of the first 
 * one when it transitions in.
 */
 #slideshow .fx:first-child + img ~ img{
	z-index: -1;
 }
 
 /**
 * Because images are styled with a different point of origin, the 
 * following rule will create different panning effects.
 */
 
 #slideshow .fx{
	opacity: 1;
	-webkit-transform: scale(1.1);
	-moz-transform: scale(1.1);
	-o-transform: scale(1.1);
	-ms-transform: scale(1.1);
	transform: scale(1.1);
 }
